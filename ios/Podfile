require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'
install! 'cocoapods', :deterministic_uuids => false

prepare_react_native_project!

target 'mobileapp' do
  use_expo_modules!
  config = use_native_modules!
  use_modular_headers!

  # Firebase dependencies at version 10.7.0
  pod 'Firebase/CoreOnly', '10.7.0'
  pod 'Firebase/Auth', '10.7.0'
  pod 'Firebase/Firestore', '10.7.0'

  # Align gRPC-Core version to match Firebase dependencies
  pod 'gRPC-Core', '1.44.0'
  pod 'abseil/algorithm', '1.20211102.0'
  pod 'abseil/memory', '1.20211102.0'

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Post-install configuration for DEFINES_MODULE and codegen
  post_install do |installer|
    installer.pods_project.targets.each do |target|
      if ['expo-dev-menu', 'Main', 'ReactNativeCompatibles', 'SafeAreaView', 'Vendored'].include?(target.name)
        target.build_configurations.each do |config|
          config.build_settings['DEFINES_MODULE'] = 'YES'
        end
      end
    end
    
    react_native_post_install(installer, config[:reactNativePath])
  end

  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
end
